// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PlayersDemo.Data;

#nullable disable

namespace PlayersDemo.Migrations
{
    [DbContext(typeof(PlayersDbContext))]
    [Migration("20230323071943_LatitudeLongitudeAdded")]
    partial class LatitudeLongitudeAdded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PlayersDemo.Data.Models.Citizenship", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Citizenships");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Suomi"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Ruotsi"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Kanada"
                        });
                });

            modelBuilder.Entity("PlayersDemo.Data.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CitizenshipId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsRight")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<int?>("TeamId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.HasKey("Id");

                    b.HasIndex("CitizenshipId");

                    b.HasIndex("TeamId");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CitizenshipId = 1,
                            FirstName = "Marko",
                            IsRight = true,
                            LastName = "Anttila",
                            Latitude = 65.013784999999999,
                            Longitude = 25.472099,
                            Position = 0,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 2,
                            CitizenshipId = 1,
                            FirstName = "Iiro",
                            IsRight = false,
                            LastName = "Pakarinen",
                            Latitude = 0.0,
                            Longitude = 0.0,
                            Position = 0,
                            TeamId = 3
                        },
                        new
                        {
                            Id = 3,
                            CitizenshipId = 1,
                            FirstName = "Atte",
                            IsRight = false,
                            LastName = "Ohtamaa",
                            Latitude = 0.0,
                            Longitude = 0.0,
                            Position = 0,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 4,
                            CitizenshipId = 3,
                            FirstName = "Cody",
                            IsRight = false,
                            LastName = "Kunyk",
                            Latitude = 0.0,
                            Longitude = 0.0,
                            Position = 0,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 5,
                            CitizenshipId = 1,
                            FirstName = "Tuukka",
                            IsRight = false,
                            LastName = "Tieksola",
                            Latitude = 0.0,
                            Longitude = 0.0,
                            Position = 0,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 6,
                            CitizenshipId = 1,
                            FirstName = "Kristian",
                            IsRight = true,
                            LastName = "Vesalainen",
                            Latitude = 60.166640739000002,
                            Longitude = 24.943536799,
                            Position = 0,
                            TeamId = 3
                        },
                        new
                        {
                            Id = 7,
                            CitizenshipId = 2,
                            FirstName = "David",
                            IsRight = false,
                            LastName = "Rundblad",
                            Latitude = 0.0,
                            Longitude = 0.0,
                            Position = 0,
                            TeamId = 1
                        },
                        new
                        {
                            Id = 8,
                            CitizenshipId = 2,
                            FirstName = "Niklas",
                            IsRight = false,
                            LastName = "Rubin",
                            Latitude = 0.0,
                            Longitude = 0.0,
                            Position = 0,
                            TeamId = 2
                        },
                        new
                        {
                            Id = 9,
                            CitizenshipId = 1,
                            FirstName = "Arttu",
                            IsRight = true,
                            LastName = "Paaso",
                            Latitude = 0.0,
                            Longitude = 0.0,
                            Position = 1,
                            TeamId = 1
                        });
                });

            modelBuilder.Entity("PlayersDemo.Data.Models.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Teams");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Kärpät"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Ässät"
                        },
                        new
                        {
                            Id = 3,
                            Name = "HIFK"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Hermes"
                        },
                        new
                        {
                            Id = 5,
                            Name = "KalPa"
                        },
                        new
                        {
                            Id = 6,
                            Name = "TPS"
                        });
                });

            modelBuilder.Entity("PlayersDemo.Data.Models.Player", b =>
                {
                    b.HasOne("PlayersDemo.Data.Models.Citizenship", "Citizenship")
                        .WithMany("CitizenShips")
                        .HasForeignKey("CitizenshipId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PlayersDemo.Data.Models.Team", "Team")
                        .WithMany("Players")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Citizenship");

                    b.Navigation("Team");
                });

            modelBuilder.Entity("PlayersDemo.Data.Models.Citizenship", b =>
                {
                    b.Navigation("CitizenShips");
                });

            modelBuilder.Entity("PlayersDemo.Data.Models.Team", b =>
                {
                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
