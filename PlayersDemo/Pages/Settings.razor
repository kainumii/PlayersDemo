@page "/settings"
@using PlayersDemo.Services.LocalStorage
@using PlayersDemo.Services.Settings
@inject ILocalStorageService LocalStorageService
@inject IUserSettingsService UserSettingsService
<h3>Settings</h3>

@*<div class="form-group">
    <label>Title</label>
    <input type="text" class="form-control" @bind="_settings.AppTitle"/>
</div>*@

@if (_settings == null)
{
    <div>Loading settings ...</div>
}
else
{
    <form>
        <div class="form-group mb-3">
            <label>Title</label>
            <input type="text" class="form-control" @bind="_settings.AppTitle" placeholder="Enter App Title" />
            <small class="form-text text-muted">App title ..</small>
        </div>
        <div class="form-group mb-3">
            <label>Property</label>
            <input type="text" class="form-control" @bind="_settings.MyProperty" placeholder="Enter Property value" />
            <small class="form-text text-muted">Property value ..</small>
        </div>
        <button class="btn btn-primary" @onclick="HandleSaveSettings">Save</button>
    </form> 
}

@code {
    UserSettings _settings;
    protected override void OnInitialized()
    {
        _settings = UserSettingsService.UserSettings;
    }

    private async Task HandleSaveSettings()
    {  
        await LocalStorageService.SetItemAsync<UserSettings>("settings", _settings);

        UserSettingsService.RaiseSettingsChanged();
    }
}
